---
#Playbook to modify Local Admin Account on IOS devices
- name: F5 Virtual Server Configuration
  hosts: all
  connection: local
  gather_facts: false
  tasks:

  - name: Collect BIG-IP TCP MONITORS
    bigip_device_facts:  
      gather_subset:
        - tcp-monitors
      provider:
        server: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
        user: "{{ lookup('env','F5_USERNAME') }}"
        password: "{{ lookup('env','F5_PASSWORD') }}"
        validate_certs: no
    delegate_to: localhost
    register: results
    when: tcp_monitor_select == 'ENABLED'

  - name: Retrieve existing TCP Monitors
    set_fact: 
      tcp_existing_monitors: "{{ results['tcp_monitors']| map(attribute='name')| list  }}"
    when: tcp_monitor_select == 'ENABLED'

  - name: Create TCP Monitor
    bigip_monitor_tcp:
      state: present
      name: "{{ 'tcp_monitor_' + tcp_monitor_port|string }}"
      ip: '*'
      port: "{{ tcp_monitor_port|string }}"
      provider:
        server: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
        user: "{{ lookup('env','F5_USERNAME') }}"
        password: "{{ lookup('env','F5_PASSWORD') }}"
        validate_certs: no
    delegate_to: localhost    
    when: tcp_monitor_select == 'ENABLED' and "{{ 'tcp_monitor' +  tcp_monitor_port|string not in tcp_existing_monitors }}"
      



  - name: Create HTTP Monitor
    bigip_monitor_http:
      state: present
      name: "{{ vs_name + '_http_monitor' }}"
      send: "{{ http_monitor_send  }}"
      receive: "{{ http_monitor_receive }}"
      provider:
        server: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
        user: "{{ lookup('env','F5_USERNAME') }}"
        password: "{{ lookup('env','F5_PASSWORD') }}"
        validate_certs: no
    delegate_to: localhost
    register: http_monitor
    when:  http_monitor_select == 'ENABLED'

  - name: Create HTTPS Monitor
    bigip_monitor_https:
      state: present
      name: "{{ vs_name + '_https_monitor' }}"
      send: "{{ https_monitor_send  }}"
      receive: "{{ https_monitor_receive }}"
      provider:
        server: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
        user: "{{ lookup('env','F5_USERNAME') }}"
        password: "{{ lookup('env','F5_PASSWORD') }}"
        validate_certs: no
    delegate_to: localhost
    register: http_monitor
    when: https_monitor_select == 'ENABLED'

  - name: Create persistence profile based on source IP
    bigip_profile_persistence_src_addr:
      name: "{{ vs_name + 'persist_profile_src_ip' }}"
      state: present
      match_across_services: yes 
      match_across_virtuals: yes
      mirror: yes
      mask: 255.255.255.255
      provider:
        server: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
        user: "{{ lookup('env','F5_USERNAME') }}"
        password: "{{ lookup('env','F5_PASSWORD') }}"
        validate_certs: no
    delegate_to: localhost
    register: persistence_profile
    when: persistence_profile_src_addr == 'ENABLED'

  - name: Create a persistence cookie profile
    bigip_profile_persistence_cookie:
      name: "{{ vs_name + '_persist_profile_cookie' }}"
      cookie_name: "{{ vs_name + '_cookie' }}"
      provider:
        server: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
        user: "{{ lookup('env','F5_USERNAME') }}"
        password: "{{ lookup('env','F5_PASSWORD') }}"
        validate_certs: no
    delegate_to: localhost    
    register: pesistence_profile
    when: persistence_profile_cookie =='ENABLED'


  - name: Set list of Monitor for Pool
    set_fact:
      monitors_list: "{{  'dummy' | monitors_list(http_monitor_select, https_monitor_select, vs_name) }}"
  
  - debug:
      msg: "{{ monitors_list }}"

  - name: Set list of nodes from survey
    set_fact:
      nodes: |
        {%- set nodes = nodes_list.split('\n') | select 
          | map("regex_replace", "^", "- {") 
          | map("regex_replace", "$", "}") 
          | join("\n") -%}
        {{ nodes | from_yaml}}

  - name: Set multiple monitors (all must succeed)
    bigip_pool:
      state: present
      name: "{{ vs_name + '_pool'  }}"
      partition: Common
      monitor_type: and_list
      monitors: "{{ monitors_list  }}"
      provider:
        server: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
        user: "{{ lookup('env','F5_USERNAME') }}"
        password: "{{ lookup('env','F5_PASSWORD') }}"
        validate_certs: no
    delegate_to: localhost

  - name: Add F5 nodes 
    bigip_node:
      host: "{{ item.node_ip  }}"
      name: "{{ item.node_name }}"
      state: disabled
      provider:
        server: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
        user: "{{ lookup('env','F5_USERNAME') }}"
        password: "{{ lookup('env','F5_PASSWORD') }}"
        validate_certs: no
    delegate_to: localhost
    loop: "{{ nodes }}"